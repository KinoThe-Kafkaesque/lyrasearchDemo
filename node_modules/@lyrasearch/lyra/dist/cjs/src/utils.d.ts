import type { TokenScore } from "./lyra";
export declare const isServer: boolean;
export declare function formatBytes(bytes: number, decimals?: number): string;
export declare function formatNanoseconds(value: number | bigint): string;
export declare function getNanosecondsTime(): bigint;
export declare function uniqueId(): string;
export declare function getOwnProperty<T = unknown>(object: Record<string, T>, property: string): T | undefined;
export declare function getTokenFrequency(token: string, tokens: string[]): number;
export declare function intersectTokenScores(arrays: TokenScore[][]): TokenScore[];
export declare function insertSortedValue(arr: TokenScore[], el: TokenScore, compareFn?: typeof sortTokenScorePredicate): TokenScore[];
export declare function includes<T>(array: T[] | readonly T[], element: T): boolean;
export declare function sortTokenScorePredicate(a: TokenScore, b: TokenScore): number;
