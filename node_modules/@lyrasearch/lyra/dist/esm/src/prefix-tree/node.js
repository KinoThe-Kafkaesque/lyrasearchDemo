import { uniqueId } from "../utils";
export function create(key = "") {
    const node = {
        id: uniqueId(),
        key,
        word: "",
        parent: null,
        children: {},
        docs: [],
        end: false,
    };
    Object.defineProperty(node, "toJSON", { value: serialize });
    return node;
}
export function updateParent(node, parent) {
    node.parent = parent.id;
    node.word = parent.word + node.key;
}
export function removeDocument(node, docID) {
    const index = node.docs.indexOf(docID);
    /* c8 ignore next 3 */
    if (index === -1) {
        return false;
    }
    node.docs.splice(index, 1);
    return true;
}
/* c8 ignore next 5 */
function serialize() {
    const { key, word, children, docs, end } = this;
    return { key, word, children, docs, end };
}
//# sourceMappingURL=node.js.map